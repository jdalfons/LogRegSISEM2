name: R-CMD-check

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}
    
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})
    
    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'release'}
          - {os: macOS-latest, r: 'release'}
          - {os: ubuntu-latest, r: 'release'}
          - {os: ubuntu-latest, r: 'devel'}
    
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEPNOTE: yes
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up R
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: ${{ matrix.config.r }}
        use-public-rspm: true

    - name: Set up pandoc
      uses: r-lib/actions/setup-pandoc@v2

    - name: Install system dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libcurl4-openssl-dev libharfbuzz-dev libfribidi-dev

    - name: Install R dependencies
      uses: r-lib/actions/setup-r-dependencies@v2
      with:
        extra-packages: |
          any::rcmdcheck
          any::devtools
          any::covr
        needs: check

    - name: Check package
      uses: r-lib/actions/check-r-package@v2
      with:
        upload-snapshots: true
        args: 'c("--no-manual", "--as-cran")'

    - name: Upload check results
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.config.os }}-r${{ matrix.config.r }}-results
        path: check

    - name: Test coverage
      if: runner.os == 'Linux' && matrix.config.r == 'release'
      run: |
        covr::codecov()
      shell: Rscript {0}